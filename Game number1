import pygame
import random

# Initialize
pygame.init()
WIDTH, HEIGHT = 800, 600
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Cars vs Animals")

# Colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)

# Game objects
car_width, car_height = 60, 40
animal_size = 40
cars = []
animals = []

# Grid setup
lanes = [100, 200, 300, 400, 500]

# Car class
class Car:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, car_width, car_height)
        self.cooldown = 0

    def shoot(self):
        if self.cooldown == 0:
            bullets.append(Bullet(self.rect.right, self.rect.centery))
            self.cooldown = 60

    def update(self):
        if self.cooldown > 0:
            self.cooldown -= 1
        self.shoot()

# Animal class
class Animal:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, animal_size, animal_size)
        self.speed = 1

    def update(self):
        self.rect.x -= self.speed

# Bullet class
class Bullet:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, 10, 5)
        self.speed = 5

    def update(self):
        self.rect.x += self.speed

bullets = []

# Game loop
clock = pygame.time.Clock()
run = True
spawn_timer = 0

while run:
    clock.tick(60)
    win.fill(WHITE)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        # Place car on click
        if event.type == pygame.MOUSEBUTTONDOWN:
            mx, my = pygame.mouse.get_pos()
            lane_y = min(lanes, key=lambda y: abs(y - my))
            cars.append(Car(50, lane_y))

    # Spawn animals
    spawn_timer += 1
    if spawn_timer > 120:
        lane_y = random.choice(lanes)
        animals.append(Animal(WIDTH, lane_y))
        spawn_timer = 0

    # Update and draw cars
    for car in cars:
        car.update()
        pygame.draw.rect(win, GREEN, car.rect)

    # Update and draw animals
    for animal in animals[:]:
        animal.update()
        pygame.draw.rect(win, RED, animal.rect)
        if animal.rect.x < 0:
            animals.remove(animal)

    # Update and draw bullets
    for bullet in bullets[:]:
        bullet.update()
        pygame.draw.rect(win, (0, 0, 0), bullet.rect)
        for animal in animals[:]:
            if bullet.rect.colliderect(animal.rect):
                animals.remove(animal)
                bullets.remove(bullet)
                break
        if bullet.rect.x > WIDTH:
            bullets.remove(bullet)

    pygame.display.update()

pygame.quit()
